enum NodeKind {
  AnyObjectTypeAnnotation = 'AnyObjectTypeAnnotation',
  AnyTypeAnnotation = 'AnyTypeAnnotation',
  ArrayExpression = 'ArrayExpression',
  ArrayPattern = 'ArrayPattern',
  ArrayTypeAnnotation = 'ArrayTypeAnnotation',
  AssignmentExpression = 'AssignmentExpression',
  AssignmentPattern = 'AssignmentPattern',
  BinaryExpression = 'BinaryExpression',
  BooleanTypeAnnotation = 'BooleanTypeAnnotation',
  CallExpression = 'CallExpression',
  ConditionalExpression = 'ConditionalExpression',
  CommonJSImportSource = 'CommonJSImportSource',
  EmptyTypeAnnotation = 'EmptyTypeAnnotation',
  EsImportSource = 'EsImportSource',
  ExistsTypeAnnotation = 'ExistsTypeAnnotation',
  ExportDefault = 'ExportDefault',
  ExportNamed = 'ExportNamed',
  ExpressionStatement = 'ExpressionStatement',
  File = 'File',
  FunctionExpression = 'FunctionExpression',
  FunctionDeclaration = 'FunctionDeclaration',
  FunctionParameter = 'FunctionParameter',
  FunctionTypeAnnotation = 'FunctionTypeAnnotation',
  Identifier = 'Identifier',
  IfStatement = 'IfStatement',
  ImportStatement = 'ImportStatement',
  ImportTypeAnnotation = 'ImportTypeAnnotation',
  InferTypeAnnotation = 'InferTypeAnnotation',
  IntersectionTypeAnnotation = 'IntersectionTypeAnnotation',
  LiteralTypeAnnotation = 'LiteralTypeAnnotation',
  LogicalExpression = 'LogicalExpression',
  MemberExpression = 'MemberExpression',
  MemberExpressionComputed = 'MemberExpressionComputed',
  NamespaceImportSource = 'NamespaceImportSource',
  NullLiteral = 'NullLiteral',
  NumberTypeAnnotation = 'NumberTypeAnnotation',
  NumericLiteral = 'NumericLiteral',
  ObjectExpression = 'ObjectExpression',
  ObjectExpressionComputedProperty = 'ObjectExpressionComputedProperty',
  ObjectExpressionProperty = 'ObjectExpressionProperty',
  ObjectExpressionSpreadProperty = 'ObjectExpressionSpreadProperty',
  ObjectTypeAnnotation = 'ObjectTypeAnnotation',
  ObjectTypeProperty = 'ObjectTypeProperty',
  ObjectTypeSpreadProperty = 'ObjectTypeSpreadProperty',
  ObjectTypeIndexer = 'ObjectTypeIndexer',
  ObjectPattern = 'ObjectPattern',
  QualifiedTypeIdentifier = 'QualifiedTypeIdentifier',
  ReturnStatement = 'ReturnStatement',
  SpreadElement = 'SpreadElement',
  StringLiteral = 'StringLiteral',
  StringTypeAnnotation = 'StringTypeAnnotation',
  SymbolTypeAnnotation = 'SymbolTypeAnnotation',
  TemplateElement = 'TemplateElement',
  TemplateLiteral = 'TemplateLiteral',
  ThisTypeAnnotation = 'ThisTypeAnnotation',
  TupleTypeAnnotation = 'TupleTypeAnnotation',
  TypeAliasDeclaration = 'TypeAliasDeclaration',
  TypeofTypeAnnotation = 'TypeofTypeAnnotation',
  TypeParameter = 'TypeParameter',
  TypeReferenceAnnotation = 'TypeReferenceAnnotation',
  UnaryExpression = 'UnaryExpression',
  UnionTypeAnnotation = 'UnionTypeAnnotation',
  UnknownTypeAnnotation = 'UnknownTypeAnnotation',
  VariableDeclaration = 'VariableDeclaration',
  VoidTypeAnnotation = 'VoidTypeAnnotation',
}
export default NodeKind;
